// 출처 표시 : "문제로 풀어보는 알고리즘" <저자 : 황인욱, 김용혁 지음> <출판사 : 인사이트> <출간년도 : 초판 2012년 8월 5일 (8쇄 : 2018년 11월 20)>

#include <stdio.h>
#include <stdlib.h> 

void subset(int* arr, int set_size, int input, int index);
void print_arr(int* arr, int arr_len);

void subset(int* arr, int set_size, int input, int index)
{
	if (index == input)
	{
		print_arr(arr, set_size);
		return;
	}

	arr[set_size] = index + 1; // 처리 조건, 값을 넣어주고 크기를 정해줌.
	subset(arr, set_size + 1, input, index + 1); // 유효범위 증가
	subset(arr, set_size, input, index + 1); // 유효범위 그대로
}

void print_arr(int* arr, int arr_len)
{
	for (int i = 0; i < arr_len; i++)
	{
		printf("%d ", arr[i]);
	} printf("\n");
}

int main()
{
	int input;
	printf("input n : ");
	scanf_s("%d", &input);

	int* arr = (int*)malloc(sizeof(int) * input); // 배열에 동적 할당

	subset(arr, 0, input, 0);

	free(arr);
	return 0;
}
