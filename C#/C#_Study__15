using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
// #include가 없어지고 using으로 변했으며 기능(외부의 라이브러리 불러오는 것)은 같다.

using static System.Console; // Console 생략 가능하게 해줌.

namespace ConsoleApp1 // 메모리 해제 문법이 C#에는 없다.
{
    class Tiger
    {
        // read write가 열린다.
        // public int num;
        int num;

        // 1.
        // setter함수를 만든다.
        /*
        public void setNum(int num)
        {
            this.num = num;
        }
        
        public int getNum()
        {
            return num;
        }
        */

        // 2.
        // Num << Property
        public int Num
        {
            set
            {
                WriteLine("set call");
                num = value;
            }
            get
            {
                WriteLine("get call");
                return num;
            }
        }

        // 3.
        int length;
        public int Length
        {
            set
            {
                length = value;
            }
            get
            {
                return length;
            }
        }

    }
    class Program
    {
        static void Main(string[] args) // 무조건 클레스로 감싸야 돌아간다.
        {
            Tiger t = new Tiger();
            // 그냥 선언시 pravite으로 되어 있기 때문에 은닉을 풀어줘야한다.
            // 밑에 코드는 객체지향 프로그램에서 절대 성립시키지 않는다.
            // 멤버 변수를 public화 시키지 않는다.
            //t.num = 100;

            // 1. 
            //t.setNum(1000);
            //WriteLine(t.getNum());

            // 2.
            t.Num = 1000;
            WriteLine(t.Num);

            string s = "무궁화";
            WriteLine(s.Length);
        }
    }
}
