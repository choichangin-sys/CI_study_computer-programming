using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
// #include가 없어지고 using으로 변했으며 기능(외부의 라이브러리 불러오는 것)은 같다.

using static System.Console; // Console 생략 가능하게 해줌.
using System.Collections;

namespace ConsoleApp1 // 메모리 해제 문법이 C#에는 없다.
{
    class Animal // 부모 클래스
    {
        public virtual void cry()
        {
            WriteLine("저는 울지 못해요.");
        }
    }

    class Dog : Animal // 상속, 자식 클래스
    {
        public override void cry()
        {
            WriteLine("멍멍");
        }
    }

    class Cat : Animal // 상속, 자식 클래스
    {
        public override void cry()
        {
            WriteLine("야옹");
        }
    }

    class Zoo
    {
        // Dog나 Cat 타입으로 하면 그 타입이 아니면 문제가 생김.
        // 그렇기에 Animal 타입으로 하면 문제가 해결됨. 업캐스트
        /*
        public void sound(Dog dog)
        {
            dog.cry();
        }

        public void sound(Cat cat)
        {
            cat.cry();
        }
        */
        public void sound(Animal animal)
        {
            animal.cry();
        }
    }

    class Program
    {
        static void Main(string[] args) // 무조건 클레스로 감싸야 돌아간다.
        {
            Zoo zoo = new Zoo();
            zoo.sound(new Dog());
            zoo.sound(new Cat());
            zoo.sound(new Animal());
        }
    }
}
